<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trang chủ</title>
    <link rel="stylesheet" href="Home.css">
</head>

<body>
    <div class="sidebar">
        <h3>QUẢN LÝ ĐĂNG KÝ SINH VIÊN</h3>
        <hr>
        <div class="menu-link collapsible" onclick="window.location.href='Home.html'">
            <span class="menu-text-home">Trang chủ</span>
        </div>
        <div class="menu-item">
            <div class="menu-link collapsible" onclick="showStudentManagement()">
                <span class="menu-text">Quản lý sinh viên</span>
            </div>
        </div>
        <div class="menu-item">
            <div class="menu-link collapsible">
                <span class="menu-text">Quản lý tín chỉ</span>
                <span class="menu-toggle">▼</span>
            </div>
            <ul class="submenu">
                <li><a href="#">Nhập tín chỉ</a></li>
                <li><a href="dangkytinchi.html">Đăng ký tín chỉ</a></li>
            </ul>
        </div>
        <div class="menu-item">
            <div class="menu-link collapsible">
                <span class="menu-text">Quản lý học tập</span>
                <span class="menu-toggle">▼</span>
            </div>
            <ul class="submenu">
                <li><a href="#">Chuyên cần</a></li>
                <li><a href="#">Kết quả học tập</a></li>
                <li><a href="#">Xếp loại</a></li>
            </ul>
        </div>
        <div class="profile-sidebar">
            <div class="profile-avatar">
                <img src="img/It's%20me.jpg" alt="Avatar">
            </div>
            <span class="profile-name">Trần Đức Anh</span>
        </div>
    </div>

    <div class="sidebar-main">
        <div class="menu-item-profile">
            <ul class="submenu">
                <li><a href="#">Đổi tên</a></li>
                <li><a href="#">Đổi ảnh</a></li>
            </ul>
        </div>
        <h2 id="header2">Danh Sách Sinh Viên</h2>
        <div class="dark-mode-toggle">
            <button id="darkModeButton" onclick="toggleDarkMode()"></button>
        </div>
        <hr>
        <div id="Find">
            <div class="find">
                <input type="text" name="textSearch" id="textSearch" placeholder="Tìm kiếm theo mã sinh viên, tên...">
                <button type="button" id="btnSearch" onclick="searchStudent(event)">Tìm kiếm</button>
            </div>
        </div>

        <section class="table" id="student-table">
            <table>
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Mã sinh viên</th>
                        <th>Họ và tên</th>
                        <th>Ngày sinh</th>
                        <th>Lớp</th>
                        <th>Khoa</th>
                    </tr>
                </thead>
                <tbody id="student-list">
                    <!-- Dữ liệu sinh viên sẽ được hiển thị ở đây -->
                </tbody>
            </table>
        </section>

        <!-- Form chỉnh sửa sinh viên -->
        <div class="edit-form-container" style="display: none;">
            <h2>Chỉnh sửa sinh viên</h2>
            <hr>
            <form class="edit-form">
                <div class="form-group">
                    <label for="studentId">Mã sinh viên</label>
                    <input type="text" id="studentId" name="studentId">
                </div>
                <div class="form-group">
                    <label for="fullName">Họ và tên</label>
                    <input type="text" id="fullName" name="fullName">
                </div>
                <div class="form-group">
                    <label for="birthDate">Ngày sinh</label>
                    <input type="date" id="birthDate" name="birthDate">
                </div>
                <div class="form-group">
                    <label for="className">Lớp</label>
                    <input type="text" id="className" name="className">
                </div>
                <div class="form-group">
                    <label for="major">Khoa</label>
                    <input type="text" id="major" name="major">
                </div>
                <div class="buttons">
                    <button type="button" class="cancel" onclick="hideEditForm()">Hủy</button>
                    <button type="submit" class="update">Cập nhật</button>
                </div>
            </form>
        </div>
        <div class="button">
            <div class="addSinhVien">
                <button type="button" onclick="showPopup()">Thêm sinh viên</button>
            </div>
            <div class="EditSinhVien">
                <button type="button" onclick="editStudent()">Sửa sinh viên</button>
            </div>
            <div class="DeleteSinhVien">
                <button type="button" onclick="showDeleteStudent()">Xóa sinh viên</button>
            </div>
        </div>
    </div>

    <!-- Popup Thêm Sinh Viên -->
    <div id="overlay"></div>
    <div id="addStudentPopup">
        <form id="addStudentForm" onsubmit="addStudent(event)">
            <h2>Thêm sinh viên</h2>
            <label for="code">Mã sinh viên:<span style="color: red">*</span></label>
            <input type="text" id="code" required>
            <label for="name">Họ và tên:<span style="color: red">*</span></label>
            <input type="text" id="name" required>
            <label for="birthDay">Ngày sinh:<span style="color: red">*</span></label>
            <input type="date" id="birthDay" required>
            <label for="class">Lớp:<span style="color: red">*</span></label>
            <input type="text" id="class" required>
            <label for="fos">Khoa:<span style="color: red">*</span></label>
            <input type="text" id="fos" required>
            <div class="button-group">
                <button type="submit" id="addPopup">Thêm</button>
                <button type="button" class="close-btn" onclick="closeAddPopup()">Đóng</button>
            </div>
        </form>
    </div>

    <!-- Popup Xóa Sinh Viên -->
<div id="overlayDelete"></div>
<div id="deleteStudentPopup">
    <form id="deleteStudentForm" onsubmit="deleteStudent(event)">
        <h2>Xóa sinh viên</h2>
        <label for="code">Mã sinh viên:</label>
        <input type="text" id="code" name="code" required>
        <div class="button-group">
            <button type="submit" id="deletePopup">Xóa</button>
            <button type="button" class="close-btn" onclick="closeDeletePopup()">Đóng</button>
        </div>
    </form>
</div>

    <script src="Home.js"></script>
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
</body>
</html>











// Thêm sự kiện cho tất cả các mục collapsible
document.querySelectorAll('.collapsible, .collapsible-profile').forEach(collapsible => {
    collapsible.addEventListener('click', function () {
        const submenu = this.nextElementSibling; // Tìm submenu liền kề
        const toggleIcon = this.querySelector('.menu-toggle'); // Biểu tượng toggle

        // Hiển thị hoặc ẩn submenu
        if (submenu.style.display === 'block') {
            submenu.style.display = 'none';
            toggleIcon.textContent = '▼';
        } else {
            submenu.style.display = 'block';
            toggleIcon.textContent = '▲';
        }
    });
});

// Hiển thị popup AddStudent
function showPopup() {
    document.getElementById('overlay').style.display = 'block';
    document.getElementById('addStudentPopup').style.display = 'block';
}
// Hiển thị popup DeleteStudent
function showDeleteStudent() {
    document.getElementById('overlayDelete').style.display = 'block';
    document.getElementById('deleteStudentPopup').style.display = 'block';
}
// Đóng popup
function closeAddPopup() {
    document.getElementById('overlay').style.display = 'none';
    document.getElementById('addStudentPopup').style.display = 'none';
}
function closeDeletePopup() {
    document.getElementById('overlayDelete').style.display = 'none';
    document.getElementById('deleteStudentPopup').style.display = 'none';
}

function showStudentManagement() {
    // Hiển thị bảng và các nút quản lý
    const buttonContainer = document.querySelector('.button');
    const buttonFind = document.querySelector('.find');
    const studentTable = document.getElementById('student-table');

    buttonContainer.style.display = 'flex';
    buttonFind.style.display = 'none';
    studentTable.style.display = 'block';
}

function showPopupAlert(message, type) {
    // Xóa alert cũ nếu có
    const oldAlert = document.querySelector('.popup-alert');
    if (oldAlert) {
        oldAlert.remove();
    }

    // Tạo alert mới
    const alert = document.createElement('div');
    alert.className = `popup-alert ${type}`;
    alert.textContent = message;

    // Chèn alert vào đầu form
    const form = document.getElementById('addStudentForm');
    form.insertBefore(alert, form.firstChild);

    // Tự động xóa alert sau 3 giây
    setTimeout(() => {
        alert.style.animation = 'slideOutUp 0.3s ease forwards';
        setTimeout(() => {
            alert.remove();
        }, 300);
    }, 1000);
}

function toggleDarkMode() {
    // Chuyển đổi lớp "dark-mode" cho thẻ body
    document.body.classList.toggle('dark-mode');

    // Chuyển đổi Dark Mode cho các phần tử khác nếu cần
    const sidebar = document.querySelector('.sidebar');
    const table = document.querySelector('.table');

    sidebar.classList.toggle('dark-mode');
    table.classList.toggle('dark-mode');
}

// Hàm thêm sinh viên
function addStudent(event) {
    event.preventDefault();

    const studentCode = document.getElementById("code").value;
    const name = document.getElementById("name").value;
    const birthDay = document.getElementById("birthDay").value;
    const classs = document.getElementById("class").value;
    const fieldOfStudy = document.getElementById("fos").value;

    fetch('addStudent.php', {
        method: "POST",
        body: JSON.stringify({
            code: studentCode,
            name: name,
            birthDay: birthDay,
            classs: classs,
            fos: fieldOfStudy
        }),
        headers: { 'Content-Type': 'application/json' }
    })
        .then(response => response.json())
        .then(res => {
            showPopupAlert(res.message, res.success ? 'success' : 'error');
            if (res.success) {
                setTimeout(() => {
                    resetForm('addStudentForm');
                    closeAddPopup();
                    loadStudents(); // Tải lại danh sách sinh viên
                    window.location.href = 'Home.html'; // Quay về trang chủ
                }, 1000);
            }
        })
        .catch(error => {
            console.log("Error: ", error);
            swal({
                title: "Thông báo!",
                text: "Lỗi tải trang!",
                icon: "error",
                button: "Ok",
            });
        });
}

// Hàm hiển thị sinh viên
function loadStudents() {
    const tableStudents = document.getElementById("student-list");

    fetch("getStudents.php")
        .then(response => response.json())
        .then(result => {
            if (!result.success) {
                throw new Error(result.message);
            }

            const students = result.data;
            tableStudents.innerHTML = "";

            if (students.length === 0) {
                tableStudents.innerHTML = "<tr><td colspan='6'>Không có sinh viên nào</td></tr>";
            } else {
                students.forEach((student, index) => {
                    let row = `
                        <tr>
                            <td style="text-align: center;">${index + 1}</td>
                            <td style="text-align: center;">${student.MaSV}</td>
                            <td>${student.HoTen}</td>
                            <td style="text-align: center;">${student.NgaySinh}</td>
                            <td style="text-align: center;">${student.Lop}</td>
                            <td style="text-align: center;">${student.Khoa}</td>
                        </tr>`;
                    tableStudents.innerHTML += row;
                });
            }
        })
        .catch(error => {
            console.error("Error:", error);
            tableStudents.innerHTML = "<tr><td colspan='6'>Lỗi khi tải dữ liệu</td></tr>";
        });
}

// Tải danh sách sinh viên khi trang được load
window.onload = loadStudents;

function editStudent() {
    alert('Chỉnh sửa thông tin sinh viên!');
}

// Hàm xóa sinh viên
function deleteStudent(event) {
    event.preventDefault();
    const studentId = document.getElementById('deleteStudentForm').querySelector('#code').value;

    if (!confirm("Bạn có chắc chắn muốn xóa sinh viên này?")) return;

    fetch("deleteStudent.php", {
        method: "POST",
        body: JSON.stringify({ studentId }),
        headers: { 'Content-Type': 'application/json' }
    })
        .then(response => response.json())
        .then(result => {
            alert(result.message);
            if (result.success) {
                resetForm('deleteStudentForm'); // Reset form xóa
                closeDeletePopup();
                loadStudents();
                window.location.href = 'Home.html'; // Quay về trang chủ
            }
        })
        .catch(error => {
            console.error("Error:", error);
            swal({
                title: "Thông báo!",
                text: "Xóa sinh viên thất bại!",
                icon: "error",
                button: "Ok",
            });
        });
}

// Hàm reset form
function resetForm(formId) {
    const form = document.getElementById(formId);
    if (form) {
        const inputs = form.getElementsByTagName('input');
        for (let input of inputs) {
            input.value = '';
        }
    }
}
function searchStudent(event) {
    event.preventDefault();
    const keyword = document.getElementById('textSearch').value.trim();
    
    if (!keyword) {
        alert('Vui lòng nhập từ khóa tìm kiếm!');
        return;
    }

    fetch(`searchStudent.php?keyword=${encodeURIComponent(keyword)}`)
        .then(response => response.json())
        .then(students => {
            const tableBody = document.getElementById('student-list');
            tableBody.innerHTML = '';

            if (students.length === 0) {
                tableBody.innerHTML = '<tr><td colspan="6" style="text-align: center;">Không tìm thấy sinh viên nào</td></tr>';
                return;
            }

            students.forEach((student, index) => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td style="text-align: center;">${index + 1}</td>
                    <td style="text-align: center;">${student.MaSV}</td>
                    <td>${student.HoTen}</td>
                    <td style="text-align: center;">${student.NgaySinh}</td>
                    <td style="text-align: center;">${student.Lop}</td>
                    <td style="text-align: center;">${student.Khoa}</td>
                `;
                row.onclick = () => selectRow(row);
                tableBody.appendChild(row);
            });
        })
        .catch(error => {
            console.error("Error:", error);
            alert('Có lỗi xảy ra khi tìm kiếm!');
        });
}

// Hàm chọn hàng trong bảng
function selectRow(row) {
    // Bỏ chọn hàng cũ
    const selectedRow = document.querySelector('tr.selected');
    if (selectedRow) {
        selectedRow.classList.remove('selected');
    }
    // Chọn hàng mới
    row.classList.add('selected');
}

// Thêm sự kiện Enter cho ô tìm kiếm
document.getElementById('textSearch').addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
        searchStudent(e);
    }
});















<?php
header('Content-Type: application/json; charset=utf-8');

try {
    $conn = new PDO("mysql:host=localhost;dbname=quanlysinhvien", "root", "");
    $conn->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
    $conn->exec("SET NAMES utf8");
    
    $keyword = trim($_GET['keyword'] ?? '');
    
    if (empty($keyword)) {
        throw new Exception('Từ khóa tìm kiếm không được để trống');
    }

    // Tìm chính xác theo mã sinh viên hoặc tìm gần đúng theo tên
    $stmt = $conn->prepare("
        SELECT * FROM sinhvien 
        WHERE MaSV = ? 
        OR HoTen LIKE ?
        ORDER BY 
            CASE WHEN MaSV = ? THEN 0 ELSE 1 END,
            HoTen ASC
    ");
    
    $stmt->execute([$keyword, "%$keyword%", $keyword]);
    echo json_encode($stmt->fetchAll(PDO::FETCH_ASSOC));

} catch(Exception $e) {
    echo json_encode([]);
} finally {
    $conn = null;
}
?>